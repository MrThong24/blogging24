{"version":3,"file":"static/js/299.c8de9a2a.chunk.js","mappings":"geAAaA,EAAQ,6CAAyCC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,qB,wDCiC1EC,EAAAA,MAAAA,SAAe,wBAAyBC,EAAAA,GAExC,IAwPA,EAxPmB,WACjB,IAAQC,GAAaC,EAAAA,EAAAA,KAAbD,SACR,GAAiBE,EAAAA,EAAAA,MACXC,GADN,eACsBC,IAAI,MAC1B,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAQIC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,aARNC,EADF,EACEA,aACAC,EAFF,EAEEA,QACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,MACAC,EALF,EAKEA,MACAC,EANF,EAMEA,UANF,IAOEC,UAAaC,EAPf,EAOeA,QAASC,EAPxB,EAOwBA,aAIlBC,EAAWJ,EAAU,SACrBK,EAAYL,EAAU,cAC5B,GACEM,EAAAA,EAAAA,GAAiBT,EAAUG,EAAWK,GAnBjB,6CAkBfE,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,SAAUC,EAAnC,EAAmCA,kBAAmBC,EAAtD,EAAsDA,kBAlB/B,wCAoBvB,wFACc,OAAR1B,QAAQ,IAARA,OAAA,EAAAA,EAAU2B,QAASC,EAAAA,GAAAA,MADzB,uBAEIC,IAAAA,KAAU,SAAU,sCAAuC,WAF/D,iCAKQC,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAS7B,GALlC,UAMQ8B,EAAAA,EAAAA,IAAUH,EAAQ,CACtBI,OAAQ,KAPZ,4CApBuB,uBA8BvBC,EAAAA,EAAAA,YAAU,WACRZ,EAASJ,KACR,CAACA,EAAUI,IAEd,IAAMa,GAAWvB,EAAM,OACjBwB,GAAcxB,EAAM,WAC1BsB,EAAAA,EAAAA,YAAU,WAAM,wCACd,6FACOhC,EADP,wDAEQmC,GAASP,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAS7B,GAFlC,UAG4BoC,EAAAA,EAAAA,IAAOD,GAHnC,QAGQE,EAHR,QAIkBC,SACd3B,EAAM0B,EAAYC,QAClBC,IAAkB,UAAAF,EAAYC,cAAZ,eAAoBE,WAAY,IAClDpC,GAAW,UAAAiC,EAAYC,cAAZ,eAAoBnC,UAAW,KAP9C,4CADc,uBAAC,WAAD,wBAWdsC,KACC,CAACzC,EAAQW,IACZ,QAA4CT,EAAAA,EAAAA,UAAS,IAArD,iBAAOwC,GAAP,MAAuBH,GAAvB,MACA,IAAoCrC,EAAAA,EAAAA,UAAS,IAA7C,iBAAOyC,GAAP,MAAmBC,GAAnB,OACAZ,EAAAA,EAAAA,YAAU,WAAM,wCACd,iGACQL,GAASkB,EAAAA,EAAAA,IAAWhB,EAAAA,GAAI,cACxBiB,GAAIC,EAAAA,EAAAA,IAAMpB,GAAQqB,EAAAA,EAAAA,IAAM,SAAU,KAAM,IAFhD,UAG8BC,EAAAA,EAAAA,IAAQH,GAHtC,OAGQI,EAHR,OAIMC,EAAS,GACbD,EAAcE,SAAQ,SAACxB,GACrBuB,EAAOE,MAAP,QACEC,GAAI1B,EAAI0B,IACL1B,EAAIU,YAGXM,GAAcO,GAXhB,4CADc,uBAAC,WAAD,wBAcdI,KACC,IACH,IAAMC,GAAiB,mCAAG,WAAOC,GAAP,gFAClB9B,GAASC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,aAAc4B,EAAKH,IADlB,UAEFlB,EAAAA,EAAAA,IAAOT,GAFL,OAElB+B,EAFkB,OAGxBjD,EAAS,YAAD,QACN6C,GAAII,EAAQJ,IACTI,EAAQpB,SAEbC,GAAkBkB,GAPM,2CAAH,sDASjBE,GAAiB,mCAAG,WAAOC,GAAP,0EACnB9C,EADmB,qDAEZ,OAARjB,QAAQ,IAARA,OAAA,EAAAA,EAAU2B,QAASC,EAAAA,GAAAA,MAFC,uBAGtBC,IAAAA,KAAU,SAAU,sCAAuC,WAHrC,iCAMlBS,GAASP,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAS7B,GAChC4D,EAAOC,OAASC,OAAOF,EAAOC,QAC9BD,EAAOG,KAAOC,GAAAA,CAAQJ,EAAOG,MAAQH,EAAOK,MAAO,CAAEC,OAAO,IARpC,WASlBpC,EAAAA,EAAAA,IAAUK,GAAD,QAAC,UACXyB,GADU,IAEbzC,MAAAA,EACAhB,QAAAA,KAZsB,QAcxBgE,EAAAA,GAAAA,QAAc,6BAdU,4CAAH,sDAgBjBC,IAAUC,EAAAA,EAAAA,UACd,iBAAO,CACLC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,cACD,CAAC,CAAEC,OAAQ,GAAK,CAAEA,OAAQ,IAC1B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAED,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG,KAC9B,CAAC,OAAQ,UAEXE,cAAe,CAEbC,OAAO,WAAD,wBAAE,WAAOC,GAAP,gFACNC,QAAQC,IAAI,iBAAkBF,GACxBG,EAAe,IAAIC,SACzBH,QAAQC,IAAI,yBAA0BC,GACtCA,EAAaE,OAAO,QAASL,GAJvB,SAKiBM,GAAAA,CAAM,CAC3BC,OAAQ,OACRC,IAAK3F,EACL8C,KAAMwC,EACNM,QAAS,CACP,eAAgB,yBAVd,cAKAC,EALA,yBAaCA,EAAS/C,KAAKA,KAAK6C,KAbpB,2CAAF,mDAAC,OAiBX,IAEF,OAAKnF,GAEH,iCACE,SAACsF,EAAA,EAAD,CACErB,MAAM,cACNsB,KAAK,yBAEP,kBAAMC,SAAUjF,EAAaoD,IAA7B,WACE,iBAAK8B,UAAU,cAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,qBACA,SAAC,EAAAC,EAAD,CACElF,QAASA,EACTmF,YAAY,mBACZC,KAAK,QACLC,UAAQ,QAGZ,UAAC,IAAD,YACE,SAAC,IAAD,oBACA,SAAC,EAAAH,EAAD,CACElF,QAASA,EACTmF,YAAY,kBACZC,KAAK,gBAIX,iBAAKH,UAAU,cAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,qBACA,SAACK,EAAA,EAAD,CACEC,SAAUzE,EACVC,kBAAmBA,EACnBkE,UAAU,YACVpE,SAAUA,EACVF,MAAOA,QAGX,UAAC,IAAD,YACE,SAAC,IAAD,wBACA,UAAC,IAAD,YACE,SAAC,WAAD,CAAiBwE,YAAY,yBAC7B,SAAC,SAAD,UACGhD,GAAWqD,OAAS,GACnBrD,GAAWsD,KAAI,SAACxC,GAAD,OACb,SAAC,WAAD,CAEEyC,QAAS,kBAAM1C,GAAkBC,IAFnC,SAIGA,EAAKmC,MAHDnC,EAAKH,aAQL,OAAdZ,SAAc,IAAdA,QAAA,EAAAA,GAAgBkD,QACf,iBAAMH,UAAU,6EAAhB,gBACG/C,SADH,IACGA,QADH,EACGA,GAAgBkD,cAKzB,gBAAKH,UAAU,QAAf,UACE,UAAC,IAAD,YACE,SAAC,IAAD,uBACA,gBAAKA,UAAU,uBAAf,UACE,SAAC,IAAD,CACErB,QAASA,GACT+B,MAAM,OACNC,MAAOjG,EACP4F,SAAU3F,YAKlB,iBAAKqF,UAAU,cAAf,WACE,UAAC,IAAD,YACE,SAAC,IAAD,4BACA,SAACY,EAAA,EAAD,CACEC,IAAiB,IAAbrE,GACJiE,QAAS,kBAAMzF,EAAS,OAAQwB,WAGpC,UAAC,IAAD,YACE,SAAC,IAAD,sBACA,UAAC,IAAD,YACE,SAAC,IAAD,CACE2D,KAAK,SACLpF,QAASA,EACT+F,QAASzC,OAAO5B,MAAiBsE,EAAAA,GAAAA,SACjCJ,MAAOI,EAAAA,GAAAA,SAJT,uBAQA,SAAC,IAAD,CACEZ,KAAK,SACLpF,QAASA,EACT+F,QAASzC,OAAO5B,MAAiBsE,EAAAA,GAAAA,QACjCJ,MAAOI,EAAAA,GAAAA,QAJT,sBAQA,SAAC,IAAD,CACEZ,KAAK,SACLpF,QAASA,EACT+F,QAASzC,OAAO5B,MAAiBsE,EAAAA,GAAAA,SACjCJ,MAAOI,EAAAA,GAAAA,SAJT,8BAWN,SAAC,IAAD,CACEC,KAAK,SACLhB,UAAU,oBACViB,UAAW3F,EACX4F,SAAU5F,EAJZ,+BAhHc","sources":["config/apiConfig.js","module/post/PostUpdate.js"],"sourcesContent":["export const imgbbAPI = `https://api.imgbb.com/1/upload?key=${process.env.REACT_APP_IMGBB_KEY}`;\r\n","import { Button } from \"components/button\";\r\nimport { Radio } from \"components/checkbox\";\r\nimport { Dropdown } from \"components/dropdown\";\r\nimport { Field, FieldCheckboxes } from \"components/field\";\r\nimport ImageUpload from \"components/image/ImageUpload\";\r\nimport { Input } from \"components/input\";\r\nimport { Label } from \"components/label\";\r\nimport Toggle from \"components/toggle/Toggle\";\r\nimport { db } from \"firebase-app/firebase-config\";\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  query,\r\n  updateDoc,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport useFirebaseImage from \"hooks/useFirebaseImage\";\r\nimport DashboardHeading from \"module/dashboard/DashboardHeading\";\r\nimport React, { useEffect, useMemo, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { postStatus, userRole } from \"utils/constants\";\r\nimport ReactQuill, { Quill } from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport ImageUploader from \"quill-image-uploader\";\r\nimport axios from \"axios\";\r\nimport { imgbbAPI } from \"config/apiConfig\";\r\nimport slugify from \"slugify\";\r\nimport { useAuth } from \"contexts/auth-context\";\r\nimport Swal from \"sweetalert2\";\r\nQuill.register(\"modules/imageUploader\", ImageUploader);\r\n\r\nconst PostUpdate = () => {\r\n  const { userInfo } = useAuth();\r\n  const [params] = useSearchParams();\r\n  const postId = params.get(\"id\");\r\n  const [content, setContent] = useState(\"\");\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    setValue,\r\n    watch,\r\n    reset,\r\n    getValues,\r\n    formState: { isValid, isSubmitting },\r\n  } = useForm({\r\n    mode: \"onChange\",\r\n  });\r\n  const imageUrl = getValues(\"image\");\r\n  const imageName = getValues(\"image_name\");\r\n  const { image, setImage, progress, handleSelectImage, handleDeleteImage } =\r\n    useFirebaseImage(setValue, getValues, imageName, deletePostImage);\r\n  async function deletePostImage() {\r\n    if (userInfo?.role !== userRole.ADMIN) {\r\n      Swal.fire(\"Failed\", \"You have no right to do this action\", \"warning\");\r\n      return;\r\n    }\r\n    const colRef = doc(db, \"users\", postId);\r\n    await updateDoc(colRef, {\r\n      avatar: \"\",\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setImage(imageUrl);\r\n  }, [imageUrl, setImage]);\r\n\r\n  const watchHot = watch(\"hot\");\r\n  const watchStatus = watch(\"status\");\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!postId) return;\r\n      const docRef = doc(db, \"posts\", postId);\r\n      const docSnapshot = await getDoc(docRef);\r\n      if (docSnapshot.data()) {\r\n        reset(docSnapshot.data());\r\n        setSelectCategory(docSnapshot.data()?.category || \"\");\r\n        setContent(docSnapshot.data()?.content || \"\");\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [postId, reset]);\r\n  const [selectCategory, setSelectCategory] = useState(\"\");\r\n  const [categories, setCategories] = useState([]);\r\n  useEffect(() => {\r\n    async function getCategoriesData() {\r\n      const colRef = collection(db, \"categories\");\r\n      const q = query(colRef, where(\"status\", \"==\", 1));\r\n      const querySnapshot = await getDocs(q);\r\n      let result = [];\r\n      querySnapshot.forEach((doc) => {\r\n        result.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setCategories(result);\r\n    }\r\n    getCategoriesData();\r\n  }, []);\r\n  const handleClickOption = async (item) => {\r\n    const colRef = doc(db, \"categories\", item.id);\r\n    const docData = await getDoc(colRef);\r\n    setValue(\"category\", {\r\n      id: docData.id,\r\n      ...docData.data(),\r\n    });\r\n    setSelectCategory(item);\r\n  };\r\n  const updatePostHandler = async (values) => {\r\n    if (!isValid) return;\r\n    if (userInfo?.role !== userRole.ADMIN) {\r\n      Swal.fire(\"Failed\", \"You have no right to do this action\", \"warning\");\r\n      return;\r\n    }\r\n    const docRef = doc(db, \"posts\", postId);\r\n    values.status = Number(values.status);\r\n    values.slug = slugify(values.slug || values.title, { lower: true });\r\n    await updateDoc(docRef, {\r\n      ...values,\r\n      image,\r\n      content,\r\n    });\r\n    toast.success(\"Update post successfully!\");\r\n  };\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: [\r\n        [\"bold\", \"italic\", \"underline\", \"strike\"],\r\n        [\"blockquote\"],\r\n        [{ header: 1 }, { header: 2 }], // custom button values\r\n        [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        [\"link\", \"image\"],\r\n      ],\r\n      imageUploader: {\r\n        // imgbbAPI\r\n        upload: async (file) => {\r\n          console.log(\"upload: ~ file\", file);\r\n          const bodyFormData = new FormData();\r\n          console.log(\"upload: ~ bodyFormData\", bodyFormData);\r\n          bodyFormData.append(\"image\", file);\r\n          const response = await axios({\r\n            method: \"post\",\r\n            url: imgbbAPI,\r\n            data: bodyFormData,\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          });\r\n          return response.data.data.url;\r\n        },\r\n      },\r\n    }),\r\n    []\r\n  );\r\n  if (!postId) return null;\r\n  return (\r\n    <>\r\n      <DashboardHeading\r\n        title=\"Update post\"\r\n        desc=\"Update post content\"\r\n      ></DashboardHeading>\r\n      <form onSubmit={handleSubmit(updatePostHandler)}>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Title</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your title\"\r\n              name=\"title\"\r\n              required\r\n            ></Input>\r\n          </Field>\r\n          <Field>\r\n            <Label>Slug</Label>\r\n            <Input\r\n              control={control}\r\n              placeholder=\"Enter your slug\"\r\n              name=\"slug\"\r\n            ></Input>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Image</Label>\r\n            <ImageUpload\r\n              onChange={handleSelectImage}\r\n              handleDeleteImage={handleDeleteImage}\r\n              className=\"h-[250px]\"\r\n              progress={progress}\r\n              image={image}\r\n            ></ImageUpload>\r\n          </Field>\r\n          <Field>\r\n            <Label>Category</Label>\r\n            <Dropdown>\r\n              <Dropdown.Select placeholder=\"Select the category\"></Dropdown.Select>\r\n              <Dropdown.List>\r\n                {categories.length > 0 &&\r\n                  categories.map((item) => (\r\n                    <Dropdown.Option\r\n                      key={item.id}\r\n                      onClick={() => handleClickOption(item)}\r\n                    >\r\n                      {item.name}\r\n                    </Dropdown.Option>\r\n                  ))}\r\n              </Dropdown.List>\r\n            </Dropdown>\r\n            {selectCategory?.name && (\r\n              <span className=\"inline-block p-3 text-sm font-medium text-green-600 rounded-lg bg-green-50\">\r\n                {selectCategory?.name}\r\n              </span>\r\n            )}\r\n          </Field>\r\n        </div>\r\n        <div className=\"mb-10\">\r\n          <Field>\r\n            <Label>Content</Label>\r\n            <div className=\"w-full entry-content\">\r\n              <ReactQuill\r\n                modules={modules}\r\n                theme=\"snow\"\r\n                value={content}\r\n                onChange={setContent}\r\n              />\r\n            </div>\r\n          </Field>\r\n        </div>\r\n        <div className=\"form-layout\">\r\n          <Field>\r\n            <Label>Feature post</Label>\r\n            <Toggle\r\n              on={watchHot === true}\r\n              onClick={() => setValue(\"hot\", !watchHot)}\r\n            ></Toggle>\r\n          </Field>\r\n          <Field>\r\n            <Label>Status</Label>\r\n            <FieldCheckboxes>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.APPROVED}\r\n                value={postStatus.APPROVED}\r\n              >\r\n                Approved\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.PENDING}\r\n                value={postStatus.PENDING}\r\n              >\r\n                Pending\r\n              </Radio>\r\n              <Radio\r\n                name=\"status\"\r\n                control={control}\r\n                checked={Number(watchStatus) === postStatus.REJECTED}\r\n                value={postStatus.REJECTED}\r\n              >\r\n                Reject\r\n              </Radio>\r\n            </FieldCheckboxes>\r\n          </Field>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          className=\"mx-auto w-[250px]\"\r\n          isLoading={isSubmitting}\r\n          disabled={isSubmitting}\r\n        >\r\n          Update post\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostUpdate;\r\n"],"names":["imgbbAPI","process","REACT_APP_IMGBB_KEY","Quill","ImageUploader","userInfo","useAuth","useSearchParams","postId","get","useState","content","setContent","useForm","mode","handleSubmit","control","setValue","watch","reset","getValues","formState","isValid","isSubmitting","imageUrl","imageName","useFirebaseImage","image","setImage","progress","handleSelectImage","handleDeleteImage","role","userRole","Swal","colRef","doc","db","updateDoc","avatar","useEffect","watchHot","watchStatus","docRef","getDoc","docSnapshot","data","setSelectCategory","category","fetchData","selectCategory","categories","setCategories","collection","q","query","where","getDocs","querySnapshot","result","forEach","push","id","getCategoriesData","handleClickOption","item","docData","updatePostHandler","values","status","Number","slug","slugify","title","lower","toast","modules","useMemo","toolbar","header","list","imageUploader","upload","file","console","log","bodyFormData","FormData","append","axios","method","url","headers","response","DashboardHeading","desc","onSubmit","className","I","placeholder","name","required","ImageUpload","onChange","length","map","onClick","theme","value","Toggle","on","checked","postStatus","type","isLoading","disabled"],"sourceRoot":""}